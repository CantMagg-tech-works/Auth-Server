spring:
  application:
    name: auth-server

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect


server:
  port: ${PORT}

logout:
  url: ${LOGOUT_URI}

oauth2:
  clientId: ${CLIENT_ID}
  clientSecret: ${SECRET_KEY}
  tokenUri: ${TOKEN_URI}
  authorizationUri: https://authorization-server.com/oauth2/authorize
  redirectUri: ${REDIRECT_URI}


logging:
  level:
    com.fasterxml.jackson: DEBUG
    com.fasterxml.jackson.databind: DEBUG

    org.springframework.security.oauth2: DEBUG
    org.springframework.security.oauth2.server.authorization: DEBUG

    org.springframework.jdbc.core: DEBUG
    org.springframework.jdbc.core.JdbcTemplate: DEBUG

flyway:
  schemas: auth-server
  table: flyway_schema_history_auth-server

app:
  kafka:
    topic-name: send-otp

kafka:
  bootstrap-servers: localhost:29092 # Cambiar según la configuración del clúster
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer